[tool.poetry]
name = "crenata"
version = "0.1.0"
description = ""
authors = ["Ryu Juheon <saidbysolo@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
"discord.py" = "^2.3.2"
neispy = "^5.0.2"
SQLAlchemy = "^2.0.15"
pandas = "^2.3.0"
matplotlib = "^3.10.3"
asyncpg = "^0.30.0"
pillow = "^11.3.0"

[tool.poetry.group.style.dependencies]
black = "^24.3.0"
isort = "^5.10.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "^3.0.0"
pytest-asyncio = "^0.19.0"

[tool.poetry.group.type.dependencies]
pyright = "^1.1.344"
mypy = "^1.5.1"

[tool.isort]
src_paths = ["crenata", "tests"]
profile = "black"

[tool.pyright]
include = ["crenata"]
typeCheckingMode = "strict"

[tool.mypy]
disable_error_code = ["attr-defined", "union-attr", "name-defined", "used-before-def", "call-arg", "arg-type", "call-overload", "valid-type", "var-annotated", "override", "return", "empty-body", "return-value", "assignment", "method-assign", "type-var", "operator", "index", "list-item", "dict-item", "typeddict-item", "typeddict-unknown-key", "has-type", "import", "no-redef", "func-returns-value", "abstract", "type-abstract", "safe-super", "valid-newtype", "exit-return", "name-match", "literal-required", "no-overload-impl", "unused-coroutine", "top-level-await", "assert-type", "truthy-function", "str-format", "str-bytes-safe", "annotation-unchecked", "syntax", "misc"]
disallow_untyped_defs = true

[tool.black]
preview = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
